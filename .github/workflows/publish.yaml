name: Workrave build containers

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build_on_linux:
    runs-on: ubuntu-24.04
    name: Image ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: debian-testing
            platforms: linux/amd64,linux/arm64
          - image: ubuntu-pbuilder
            platforms: linux/amd64,linux/arm64
          - image: ubuntu-jammy
            platforms: linux/amd64,linux/arm64
          - image: ubuntu-noble
            platforms: linux/amd64,linux/arm64
          - image: ubuntu-plucky
            platforms: linux/amd64,linux/arm64
          - image: ubuntu-questing
            platforms: linux/amd64,linux/arm64
          - image: ubuntu-rolling
            platforms: linux/amd64,linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: qemu workaround
      #   run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes -c yes

      - name: Build and push ${{ matrix.image }}
        run: |
          cd ./${{ matrix.image }}/

          # Build for each platform separately since we need privileged mode
          IFS=',' read -ra PLATFORMS <<< "${{ matrix.platforms }}"
          for platform in "${PLATFORMS[@]}"; do
            arch=$(echo $platform | cut -d'/' -f2)
            echo "Building for $platform (arch: $arch)"
            
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            
            docker buildx build \
              --platform $platform \
              --build-arg GIT_COMMIT_HASH=${{ github.sha }} \
              --build-arg TARGETARCH=$arch \
              --tag ghcr.io/${{ github.repository_owner }}/workrave-build:${{ matrix.image }}-$arch \
              --load \
              .
            
            docker push ghcr.io/${{ github.repository_owner }}/workrave-build:${{ matrix.image }}-$arch
          done

          # Create and push manifest
          docker manifest create ghcr.io/${{ github.repository_owner }}/workrave-build:${{ matrix.image }} \
            $(IFS=','; for p in ${PLATFORMS[*]}; do echo ghcr.io/${{ github.repository_owner }}/workrave-build:${{ matrix.image }}-$(echo $p | cut -d'/' -f2); done)

          docker manifest push ghcr.io/${{ github.repository_owner }}/workrave-build:${{ matrix.image }}

      - name: Image digest
        run: echo "Build complete"

  build_on_windows:
    runs-on: windows-2022
    name: Windows Image ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: windows-msys2

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/workrave-build:${{ matrix.image }} --build-arg=GIT_COMMIT_HASH=${{ github.sha }} ./${{ matrix.image }}/

      - name: Publish
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/workrave-build:${{ matrix.image }}
